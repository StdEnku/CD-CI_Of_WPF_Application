name: Release

on:
  push:
    tags:
      - "v*"
  
#==================================================
#  ここからプロジェクトに応じて書き直してください
#==================================================
env:
  # アプリケーション名
  App_Name: PrismBlankApp
  
  # アプリケーションプロジェクトファイルのパス
  Project_Path: PrismBlankApp/PrismBlankApp/PrismBlankApp.csproj

jobs:
  #======================================================
  #  ここからpublishしたパッケージをリリースとして登録
  #  mainブランチでのvから始まるタグのpushで実行される。
  #  githubのリリース画面ではタグで指定したバージョンと
  #  tagメッセージが表示される。
  #======================================================
  create-release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: dotnet publish
        run: |
          dotnet publish ${{ env.Project_Path }} -c Release -r win-x86 --self-contained true -p:PublishTrimmed=false -p:PublishSingleFile=true -p:PublishReadyToRun=true -o outputs\${{ env.App_Name }}X86
          dotnet publish ${{ env.Project_Path }} -c Release -r win-x64 --self-contained true -p:PublishTrimmed=false -p:PublishSingleFile=true -p:PublishReadyToRun=true -o outputs\${{ env.App_Name }}X64
      
      - name: Archive publish files
        uses: actions/upload-artifact@v1
        with:
          name: FileRenamerDiff_apps
          path: outputs
          
      - name: Get Tag Message
        run: |
          "TAG_MESSAGE=$(git tag -l --format='%(contents:subject)'${GITHUB_REF#refs/*/})" >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ env.TAG_MESSAGE }}
          draft: false
          prerelease: false

      - name: Archive packages
        shell: pwsh
        run: |
          Compress-Archive -Path outputs\${{ env.App_Name }}X86 -DestinationPath ${{ env.App_Name }}X86.zip
          Compress-Archive -Path outputs\${{ env.App_Name }}X64 -DestinationPath ${{ env.App_Name }}X64.zip
          
      - name: Upload Release Asset
        uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-url: ${{ steps.create_release.outputs.upload_url }}
          files: |
            ${{ env.App_Name }}X86.zip
            ${{ env.App_Name }}X64.zip